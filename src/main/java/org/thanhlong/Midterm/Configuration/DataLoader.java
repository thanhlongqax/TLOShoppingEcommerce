package org.thanhlong.Midterm.Configuration;

import jakarta.annotation.PostConstruct;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Component;
import org.thanhlong.Midterm.Models.*;
import org.thanhlong.Midterm.Repository.*;

import java.util.ArrayList;
import java.util.List;

@Component
public class DataLoader {
    @Autowired
    RoleRepository roleRepository;
    @Autowired
    UserRepository userRepository;
    @Autowired
    ProductRepository productRepository;
    @Autowired
    ColorRepository colorRepository;
    @Autowired
    CategoryRepository categoryRepository;
    @Autowired
    BrandRepository brandRepository;
    @Autowired
    BCryptPasswordEncoder passwordEncoder;
    private static boolean dataLoaded = false;
    @PostConstruct
    public void loadData(){

        if (!dataLoaded) {
            try {
                Role admin1 = new Role();
                admin1.setId(1L);
                admin1.setName("ROLE_ADMIN");

                Role user1 = new Role();
                user1.setId(2L);
                user1.setName("ROLE_USER");

                roleRepository.save(admin1);
                roleRepository.save(user1);

                //tao 1 list chua 2 role
                List<Role> admin2 = new ArrayList<>();
                admin2.add(user1);
                admin2.add(admin1);

                //tao list chua 1 role
                List<Role> user2 = new ArrayList<>();
                user2.add(user1);
                // Th√™m d·ªØ li·ªáu m·∫´u khi ·ª©ng d·ª•ng kh·ªüi ƒë·ªông
                if (userRepository.count() == 0) {
                    User user = new User();
                    user.setUserName("vovanthanh");
                    user.setPassword(passwordEncoder.encode("12345678"));
                    user.setName("V√µ VƒÉn Th√†nh");
                    user.setEmail("vovanthanh@gmail.com");
                    user.setAddress("ƒê·∫°i H·ªçc T√¥n ƒê·ª©c Th·∫Øng");
                    user.setPhoneNumber("0123456789");
                    user.setRoles(user2);

                    User admin = new User();
                    admin.setUserName("admin");
                    admin.setPassword(passwordEncoder.encode("12345678"));
                    admin.setName("Nguy·ªÖn L√¢m Th√†nh Long");
                    admin.setPhoneNumber("0817757012");
                    admin.setEmail("thanhlongqax@gmail.com");
                    admin.setAddress("ktx t√≤a I TDTU");
                    admin.setRoles(admin2);

                    userRepository.save(admin);
                    userRepository.save(user);
                }
                Brand nike = new Brand();
                nike.setId(1L);
                nike.setName("Nike");
                brandRepository.save(nike);

                Brand levi = new Brand();
                levi.setId(2L);
                levi.setName("Levi");
                brandRepository.save(levi);

                Brand uniqulo = new Brand();
                uniqulo.setId(3L);
                uniqulo.setName("UNIQULO");
                brandRepository.save(uniqulo);


                Color blue = new Color();
                blue.setId(1L);
                blue.setName("Xanh D∆∞ong");
                colorRepository.save(blue);

                Color red = new Color();
                red.setId(2L);
                red.setName("ƒê·ªè");
                colorRepository.save(red);

                Color yellow = new Color();
                yellow.setId(3L);
                yellow.setName("V√†ng");
                colorRepository.save(yellow);

                Color black = new Color();
                black.setId(4L);
                black.setName("ƒêen");
                colorRepository.save(black);

                Color gray = new Color();
                gray.setId(5L);
                gray.setName("X√°m");
                colorRepository.save(gray);

                Color pink = new Color();
                pink.setId(6L);
                pink.setName("H·ªìng");
                colorRepository.save(pink);

                Category ao = new Category();
                ao.setId(1L);
                ao.setName("√Åo");
                categoryRepository.save(ao);

                Category dam = new Category();
                dam.setId(2L);
                dam.setName("ƒê·∫ßm");
                categoryRepository.save(dam);

// Th√™m d·ªØ li·ªáu v√†o b·∫£ng products
                productRepository.save(new Product(1L, "√Åo Thun Caro", blue, nike, ao, 100, "Ao_ThunCaro.jpg", "üåü √Åo Caro - Khi Phong C√°ch G·∫∑p ƒê·ªô Linh Ho·∫°t üåü..."));
                productRepository.save(new Product(2L, "√Åo Jean", yellow, levi, ao, 100, "Ao_Jean.jpg", "üåü √Åo Jean N·ªØ kh√¥ng ch·ªâ l√† s·ª± k·∫øt h·ª£p ho√†n h·∫£o gi·ªØa phong c√°ch v√† tho·∫£i m√°i..."));
                productRepository.save(new Product(3L, "√Åo S·ªçc Caro", yellow, levi, ao, 100, "Ao_Soccaro.jpg", "üåü B·ªô S∆∞u T·∫≠p √Åo S∆° Mi S·ªçc Caro c·ªßa ch√∫ng t√¥i. Nh·ªØng chi·∫øc √°o s∆° mi n√†y kh√¥ng ch·ªâ mang l·∫°i v·∫ª ngo√†i ph√≥ng kho√°ng m√† c√≤n l√† bi·ªÉu t∆∞·ª£ng c·ªßa s·ª± tinh t·∫ø v√† tr·∫ª trung."));
                productRepository.save(new Product(4L, "√Åo S∆° Mi", black, uniqulo, ao, 150, "Ao_Somi.jpg", "üåü Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi th·∫ø gi·ªõi c·ªßa ch√∫ng t√¥i, n∆°i √°o s∆° mi kh√¥ng ch·ªâ l√† m·ªôt trang ph·ª•c, m√† l√† bi·ªÉu t∆∞·ª£ng c·ªßa s·ª± qu√Ω ph√°i v√† phong c√°ch. B·ªô S∆∞u T·∫≠p √Åo S∆° Mi N·ªØ c·ªßa ch√∫ng t√¥i s·∫Ω ƒë∆∞a b·∫°n v√†o m·ªôt h√†nh tr√¨nh th·ªùi trang ƒë·∫ßy ·∫•n t∆∞·ª£ng."));
                productRepository.save(new Product(5L, "√Åo Thun N·ªØ", gray, levi, ao, 100, "Ao_Thun_Nu.jpg", "üåü √°o thun c·ªßa ch√∫ng t√¥i ƒë∆∞·ª£c l√†m t·ª´ ch·∫•t li·ªáu tho√°ng kh√≠, m·ªÅm m·∫°i v√† tho·∫£i m√°i, gi√∫p b·∫°n t·ª± tin v√† tho·∫£i m√°i m·ªói khi m·∫∑c V·ªõi nhi·ªÅu ki·ªÉu d√°ng t·ª´ basic ƒë·∫øn trendy, ch√∫ng t√¥i t·ª± h√†o mang ƒë·∫øn s·ª± ƒëa d·∫°ng ƒë·ªÉ b·∫°n c√≥ th·ªÉ t√¨m th·∫•y chi·∫øc √°o thun ph·∫£n √°nh phong c√°ch c√° nh√¢n c·ªßa m√¨nh."));
                productRepository.save(new Product(6L, "ƒê·∫ßm √îm D√°ng", pink, uniqulo, dam, 120, "Dam_Om.jpg", "üåü ƒê·∫ßm √îm ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ √¥m s√°t v√≥c d√°ng, t√¥n l√™n nh·ªØng ƒë∆∞·ªùng cong quy·∫øn r≈© c·ªßa b·∫°n. Ki·ªÉu d√°ng n√†y kh√¥ng ch·ªâ l√† s·ª± k·∫øt h·ª£p ho√†n h·∫£o gi·ªØa tho·∫£i m√°i v√† g·ª£i c·∫£m m√† c√≤n l√† bi·ªÉu t∆∞·ª£ng c·ªßa s·ª± t·ª± tin."));
                productRepository.save(new Product(7L, "ƒê·∫ßm V√†ng", yellow, levi, dam, 130, "Dam_Vang.jpg", "üåü ƒê·∫ßm V√†ng T∆∞∆°i S√°ng kh√¥ng ch·ªâ l√† m·ªôt chi·∫øc ƒë·∫ßm, m√† l√† s·ª± k·∫øt h·ª£p h√†i h√≤a gi·ªØa m√†u s·∫Øc nƒÉng ƒë·ªông v√† ki·ªÉu d√°ng thanh l·ªãch. M√†u v√†ng t∆∞∆°i s√°ng mang l·∫°i nƒÉng l∆∞·ª£ng t√≠ch c·ª±c v√† l√†m n·ªïi b·∫≠t v·∫ª tr·∫ª trung c·ªßa b·∫°n."));
                productRepository.save(new Product(8L, "ƒê·∫ßm Xanh", blue, uniqulo, dam, 140, "Dam_Xanh.jpg", "üåü ƒê∆∞·ª£c t·∫°o n√™n t·ª´ ch·∫•t li·ªáu nh·∫π nh√†ng"));

                dataLoaded = true; // Set the flag to true after data loading

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}

